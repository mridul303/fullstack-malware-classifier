import os
import tempfile

from fastapi import FastAPI, File, UploadFile
from fastapi.middleware.cors import CORSMiddleware

from classifiers import detect_malware_dense, detect_malware_vgg
from file2png import file_to_png


origin = ["*"]
app = FastAPI()
app.add_middleware(
    CORSMiddleware,
    allow_origins=origin,
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
)
current_dir = os.path.dirname(os.path.abspath(__file__))

@app.post("/upload")
async def create_upload_file(file: UploadFile = File(...)):
    with tempfile.TemporaryDirectory(dir=current_dir) as temp_dir:
        with open(f"{temp_dir}/file","wb") as f:
            f.write( await file.read())
        
        with open(f"{temp_dir}/file", "rb") as infile, open(f"{temp_dir}/output.png", "wb") as outfile:
            file_to_png(infile, outfile, (224,224))

        accuracy = detect_malware_dense(temp_dir)
        vgg_accuracy = detect_malware_vgg(temp_dir)
        msg = lambda x: "File is safe" if x < 0.80 else "File is malicious" 
        return {
            "DENSENET": msg(accuracy),
            "VGG": msg(accuracy)
        }
